spring:
  data:
    mongodb:
      uri: mongodb://localhost/anber
  datasource:
    url: jdbc:mysql://localhost/anber?useSSL=false
    username: root
    password: root
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
  mail:
    default-encoding: UTF-8
    host: smtp.gmail.com
    username: anber.project@gmail.com
    password: cttkgbdglsmgdttf
    port: 587
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            trust: smtp.gmail.com
    protocol: smtp
    test-connection: false



    from:
      email: anber.project@gmail.com

    queries:
      users-query: select email, password, '1' as enabled from auth_user where email=? and verified='true'
      roles-query: select u.email, r.role_name from auth_user u inner join auth_user_role ur on(u.auth_user_id=ur.auth_user_id) inner join auth_role r on(ur.auth_role_id=r.auth_role_id) where u.email=?
  security:
    basic:
      enabled: false

messages:
  token:
      nf: token not found
      ac: alreadyconfirmed
      ex: expired
      co: confirmed
  email:
    sender: anber.project@gmail.com
    loginFail:
        warningTitle: AnBer Warning
        warningText: "Someone is trying to log into your Account on AnBer! Please reset your password with the following link: http://localhost:9200/forgot-password"
    verification:
        encoding: "utf-8"
        link: "http://localhost:9200/confirm?token="
        datePattern: "yyyy-MM-dd HH:mm"
        confirmTitle: Confirm your email
        confirmText: "Please confirm your email by clicking on the following link: http://localhost:9200/confirm?token="
        failed: Failed to send email
  user:
    userRole:
      name: "ROLE_USER"
      description: "This user has access to site, after login - normal user"

data:
  admin:
    username: ADMIN
    password: admin
    email: admin@email.com
  boolean:
    true: true
    false: false
  roles:
    admin: ROLE_ADMIN
    user: ROLE_USER
  user-profile:
    profile-options:
      - email
      - password
      - username
      - country
      - homes
      - notificationsEnabled

  search-engine:
    sort:
      asc: asc
      desc: desc
    search-properties:
      - "cn=country"
      - "pt=provider type"
      - "pn=provider name"
      - "tn=tariff name"
      - "br=basic rate"
      - "pm=price model"
  home:
    home-properties:
      - homeName
      - country
      - city
      - postalCode
      - type
      - sizeInSquareMeters
webapptreelist:
  resourceinfos:
    - category: WebAppTree
      name: See the Web App Tree
      description: Get an overview of all possible actions for you
      uri: /webapptree
      restMethod: GET
      allowedRoles:
        - role: ROLE_USER
        - role: ROLE_ADMIN
    - category: Account
      name: Edit my Profile
      description: Edit my Profile
      uri: '/{username}/edit/{profileOption}'
      restMethod: PUT
      allowedRoles:
        - role: ROLE_USER
        - role: ROLE_ADMIN
    - category: Account
      name: Delete my Account
      description: Delete my Account
      uri: '/{username}/delete'
      restMethod: DELETE
      allowedRoles:
        - role: ROLE_ADMIN
        - role: ROLE_USER
    - category: Homes
      name: Add my home
      description: Add my home to my Account
      uri: '/{username}/edit/homes/add'
      restMethod: PUT
      allowedRoles:
        - role: ROLE_ADMIN
        - role: ROLE_USER
    - category: Homes
      name: Edit my home
      description: Edit my home
      uri: '/{username}/edit/homes/add'
      restMethod: PUT
      allowedRoles:
        - role: ROLE_ADMIN
        - role: ROLE_USER
    - category: Homes
      name: Delete my Home
      description: Delete my Home
      uri: '/{username}/edit/homes/remove/{id}'
      restMethod: PUT
      allowedRoles:
        - role: ROLE_ADMIN
        - role: ROLE_USER